//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Xml;
using Dpws.Client;
using Dpws.Client.Discovery;
using Dpws.Client.Eventing;
using Ws.Services;
using Ws.Services.Utilities;
using Ws.Services.Binding;
using Ws.Services.Soap;
using Ws.Services.WsaAddressing;
using Ws.Services.Xml;

namespace tempuri.org
{
    
    
    public class IDuperSvcClientProxy : DpwsClient
    {
        
        private IRequestChannel m_requestChannel = null;
        
        public IDuperSvcClientProxy(Binding binding, ProtocolVersion version) : 
                base(binding, version)
        {

            // Set client endpoint address
            m_requestChannel = m_localBinding.CreateClientChannel(new ClientBindingContext(m_version));
        }
        
        public virtual IsActiveResponse IsActive(IsActive req)
        {

            // Create request header
            String action;
            action = "http://tempuri.org/IDuperSvc/IsActive";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, EndpointAddress, m_version.AnonymousUri, null, null);
            WsMessage request = new WsMessage(header, req, WsPrefix.None);

            // Create request serializer
            IsActiveDataContractSerializer reqDcs;
            reqDcs = new IsActiveDataContractSerializer("IsActive", "http://tempuri.org/");
            request.Serializer = reqDcs;
            request.Method = "IsActive";


            // Send service request
            m_requestChannel.Open();
            WsMessage response = m_requestChannel.Request(request);
            m_requestChannel.Close();

            // Process response
            IsActiveResponseDataContractSerializer respDcs;
            respDcs = new IsActiveResponseDataContractSerializer("IsActiveResponse", "http://tempuri.org/");
            IsActiveResponse resp;
            resp = ((IsActiveResponse)(respDcs.ReadObject(response.Reader)));
            response.Reader.Dispose();
            response.Reader = null;
            return resp;
        }
        
        public virtual GetDataResponse GetData(GetData req)
        {

            // Create request header
            String action;
            action = "http://tempuri.org/IDuperSvc/GetData";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, EndpointAddress, m_version.AnonymousUri, null, null);
            WsMessage request = new WsMessage(header, req, WsPrefix.None);

            // Create request serializer
            GetDataDataContractSerializer reqDcs;
            reqDcs = new GetDataDataContractSerializer("GetData", "http://tempuri.org/");
            request.Serializer = reqDcs;
            request.Method = "GetData";


            // Send service request
            m_requestChannel.Open();
            WsMessage response = m_requestChannel.Request(request);
            m_requestChannel.Close();

            // Process response
            GetDataResponseDataContractSerializer respDcs;
            respDcs = new GetDataResponseDataContractSerializer("GetDataResponse", "http://tempuri.org/");
            GetDataResponse resp;
            resp = ((GetDataResponse)(respDcs.ReadObject(response.Reader)));
            response.Reader.Dispose();
            response.Reader = null;
            return resp;
        }
        
        public virtual GetDataUsingDataContractResponse GetDataUsingDataContract(GetDataUsingDataContract req)
        {

            // Create request header
            String action;
            action = "http://tempuri.org/IDuperSvc/GetDataUsingDataContract";
            WsWsaHeader header;
            header = new WsWsaHeader(action, null, EndpointAddress, m_version.AnonymousUri, null, null);
            WsMessage request = new WsMessage(header, req, WsPrefix.None);

            // Create request serializer
            GetDataUsingDataContractDataContractSerializer reqDcs;
            reqDcs = new GetDataUsingDataContractDataContractSerializer("GetDataUsingDataContract", "http://tempuri.org/");
            request.Serializer = reqDcs;
            request.Method = "GetDataUsingDataContract";


            // Send service request
            m_requestChannel.Open();
            WsMessage response = m_requestChannel.Request(request);
            m_requestChannel.Close();

            // Process response
            GetDataUsingDataContractResponseDataContractSerializer respDcs;
            respDcs = new GetDataUsingDataContractResponseDataContractSerializer("GetDataUsingDataContractResponse", "http://tempuri.org/");
            GetDataUsingDataContractResponse resp;
            resp = ((GetDataUsingDataContractResponse)(respDcs.ReadObject(response.Reader)));
            response.Reader.Dispose();
            response.Reader = null;
            return resp;
        }
    }
}
