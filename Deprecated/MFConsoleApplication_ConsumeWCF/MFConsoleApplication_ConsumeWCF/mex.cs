//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Xml;
using System.Ext;
using System.Ext.Xml;
using Ws.ServiceModel;
using Ws.Services.Mtom;
using Ws.Services.Serialization;
using XmlElement = Ws.Services.Xml.WsXmlNode;
using XmlAttribute = Ws.Services.Xml.WsXmlAttribute;
using XmlConvert = Ws.Services.Serialization.WsXmlConvert;

namespace tempuri.org
{
    
    
    [DataContract(Namespace="http://tempuri.org/")]
    public class IsActive
    {
    }
    
    public class IsActiveDataContractSerializer : DataContractSerializer
    {
        
        public IsActiveDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public IsActiveDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            IsActive IsActiveField = null;
            if (IsParentStartElement(reader, false, true))
            {
                IsActiveField = new IsActive();
                reader.Read();
                reader.ReadEndElement();
            }
            return IsActiveField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            IsActive IsActiveField = ((IsActive)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                writer.WriteEndElement();
            }
            return;
        }
    }
    
    [DataContract(Namespace="http://tempuri.org/")]
    public class IsActiveResponse
    {
        
        [DataMember(Order=0, IsRequired=false)]
        public bool IsActiveResult;
    }
    
    public class IsActiveResponseDataContractSerializer : DataContractSerializer
    {
        
        public IsActiveResponseDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public IsActiveResponseDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            IsActiveResponse IsActiveResponseField = null;
            if (IsParentStartElement(reader, false, true))
            {
                IsActiveResponseField = new IsActiveResponse();
                reader.Read();
                if (IsChildStartElement(reader, "IsActiveResult", false, false))
                {
                    reader.Read();
                    IsActiveResponseField.IsActiveResult = XmlConvert.ToBoolean(reader.ReadString());
                    reader.ReadEndElement();
                }
                reader.ReadEndElement();
            }
            return IsActiveResponseField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            IsActiveResponse IsActiveResponseField = ((IsActiveResponse)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                if (WriteChildElement(writer, "IsActiveResult", false, false, IsActiveResponseField.IsActiveResult))
                {
                    writer.WriteString(XmlConvert.ToString(IsActiveResponseField.IsActiveResult));
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            return;
        }
    }
    
    [ServiceContract(Namespace="http://tempuri.org/")]
    [PolicyAssertion(Namespace="http://www.w3.org/2006/05/addressing/wsdl", Name="UsingAddressing", PolicyID="WS2007HttpBinding_IPersistenceSvc_policy")]
    public interface IIPersistenceSvc
    {
        
        [OperationContract(Action="http://tempuri.org/IPersistenceSvc/IsActive")]
        IsActiveResponse IsActive(IsActive req);
    }
}
