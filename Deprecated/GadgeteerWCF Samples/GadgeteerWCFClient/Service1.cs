//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Xml;
using System.Ext;
using System.Ext.Xml;
using Ws.ServiceModel;
using Ws.Services.Mtom;
using Ws.Services.Serialization;
using XmlElement = Ws.Services.Xml.WsXmlNode;
using XmlAttribute = Ws.Services.Xml.WsXmlAttribute;
using XmlConvert = Ws.Services.Serialization.WsXmlConvert;

namespace Gadgeteer.WCF.Sample
{
    
    
    [DataContract(Namespace="http://Gadgeteer.WCF.Sample")]
    public class GetData
    {
        
        [DataMember(Order=0, IsRequired=false)]
        public int value;
    }
    
    public class GetDataDataContractSerializer : DataContractSerializer
    {
        
        public GetDataDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public GetDataDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            GetData GetDataField = null;
            if (IsParentStartElement(reader, false, true))
            {
                GetDataField = new GetData();
                reader.Read();
                if (IsChildStartElement(reader, "value", false, false))
                {
                    reader.Read();
                    GetDataField.value = XmlConvert.ToInt32(reader.ReadString());
                    reader.ReadEndElement();
                }
                reader.ReadEndElement();
            }
            return GetDataField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            GetData GetDataField = ((GetData)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                if (WriteChildElement(writer, "value", false, false, GetDataField.value))
                {
                    writer.WriteString(XmlConvert.ToString(GetDataField.value));
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            return;
        }
    }
    
    [DataContract(Namespace="http://Gadgeteer.WCF.Sample")]
    public class GetDataResponse
    {
        
        [DataMember(Order=0, IsNillable=true, IsRequired=false)]
        public string GetDataResult;
    }
    
    public class GetDataResponseDataContractSerializer : DataContractSerializer
    {
        
        public GetDataResponseDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public GetDataResponseDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            GetDataResponse GetDataResponseField = null;
            if (IsParentStartElement(reader, false, true))
            {
                GetDataResponseField = new GetDataResponse();
                reader.Read();
                if (IsChildStartElement(reader, "GetDataResult", true, false))
                {
                    reader.Read();
                    GetDataResponseField.GetDataResult = reader.ReadString();
                    reader.ReadEndElement();
                }
                reader.ReadEndElement();
            }
            return GetDataResponseField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            GetDataResponse GetDataResponseField = ((GetDataResponse)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                if (WriteChildElement(writer, "GetDataResult", true, false, GetDataResponseField.GetDataResult))
                {
                    writer.WriteString(GetDataResponseField.GetDataResult);
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            return;
        }
    }
    
    [DataContract(Namespace="http://Gadgeteer.WCF.Sample")]
    public class GetDataUsingDataContract
    {
        
        [DataMember(Order=0, IsNillable=true, IsRequired=false)]
        public Gadgeteer.WCF.Sample.Data.CompositeType composite;
    }
    
    public class GetDataUsingDataContractDataContractSerializer : DataContractSerializer
    {
        
        public GetDataUsingDataContractDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public GetDataUsingDataContractDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            GetDataUsingDataContract GetDataUsingDataContractField = null;
            if (IsParentStartElement(reader, false, true))
            {
                GetDataUsingDataContractField = new GetDataUsingDataContract();
                reader.Read();
                Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer compositeDCS = new Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer("composite", "http://Gadgeteer.WCF.Sample", "http://Gadgeteer.WCF.Sample.Data");
                compositeDCS.BodyParts = this.BodyParts;
                GetDataUsingDataContractField.composite = ((Gadgeteer.WCF.Sample.Data.CompositeType)(compositeDCS.ReadObject(reader)));
                reader.ReadEndElement();
            }
            return GetDataUsingDataContractField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            GetDataUsingDataContract GetDataUsingDataContractField = ((GetDataUsingDataContract)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer compositeDCS = new Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer("composite", "http://Gadgeteer.WCF.Sample", "http://Gadgeteer.WCF.Sample.Data");
                compositeDCS.BodyParts = this.BodyParts;
                compositeDCS.WriteObject(writer, GetDataUsingDataContractField.composite);
                writer.WriteEndElement();
            }
            return;
        }
    }
    
    [DataContract(Namespace="http://Gadgeteer.WCF.Sample")]
    public class GetDataUsingDataContractResponse
    {
        
        [DataMember(Order=0, IsNillable=true, IsRequired=false)]
        public Gadgeteer.WCF.Sample.Data.CompositeType GetDataUsingDataContractResult;
    }
    
    public class GetDataUsingDataContractResponseDataContractSerializer : DataContractSerializer
    {
        
        public GetDataUsingDataContractResponseDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public GetDataUsingDataContractResponseDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            GetDataUsingDataContractResponse GetDataUsingDataContractResponseField = null;
            if (IsParentStartElement(reader, false, true))
            {
                GetDataUsingDataContractResponseField = new GetDataUsingDataContractResponse();
                reader.Read();
                Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer GetDataUsingDataContractResultDCS = new Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer("GetDataUsingDataContractResult", "http://Gadgeteer.WCF.Sample", "http://Gadgeteer.WCF.Sample.Data");
                GetDataUsingDataContractResultDCS.BodyParts = this.BodyParts;
                GetDataUsingDataContractResponseField.GetDataUsingDataContractResult = ((Gadgeteer.WCF.Sample.Data.CompositeType)(GetDataUsingDataContractResultDCS.ReadObject(reader)));
                reader.ReadEndElement();
            }
            return GetDataUsingDataContractResponseField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            GetDataUsingDataContractResponse GetDataUsingDataContractResponseField = ((GetDataUsingDataContractResponse)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer GetDataUsingDataContractResultDCS = new Gadgeteer.WCF.Sample.Data.CompositeTypeDataContractSerializer("GetDataUsingDataContractResult", "http://Gadgeteer.WCF.Sample", "http://Gadgeteer.WCF.Sample.Data");
                GetDataUsingDataContractResultDCS.BodyParts = this.BodyParts;
                GetDataUsingDataContractResultDCS.WriteObject(writer, GetDataUsingDataContractResponseField.GetDataUsingDataContractResult);
                writer.WriteEndElement();
            }
            return;
        }
    }
    
    [ServiceContract(Namespace="http://Gadgeteer.WCF.Sample")]
    public interface IIService1
    {
        
        [OperationContract(Action="http://Gadgeteer.WCF.Sample/IService1/GetData")]
        GetDataResponse GetData(GetData req);
        
        [OperationContract(Action="http://Gadgeteer.WCF.Sample/IService1/GetDataUsingDataContract")]
        GetDataUsingDataContractResponse GetDataUsingDataContract(GetDataUsingDataContract req);
    }
}
namespace Gadgeteer.WCF.Sample.Data
{
    
    
    [DataContract(Namespace="http://Gadgeteer.WCF.Sample.Data")]
    public class CompositeType
    {
        
        [DataMember(Order=0, IsRequired=false)]
        public bool BoolValue;
        
        [DataMember(Order=1, IsNillable=true, IsRequired=false)]
        public string StringValue;
    }
    
    public class CompositeTypeDataContractSerializer : DataContractSerializer
    {
        
        public CompositeTypeDataContractSerializer(string rootName, string rootNameSpace) : 
                base(rootName, rootNameSpace)
        {
        }
        
        public CompositeTypeDataContractSerializer(string rootName, string rootNameSpace, string localNameSpace) : 
                base(rootName, rootNameSpace, localNameSpace)
        {
        }
        
        public override object ReadObject(XmlReader reader)
        {
            CompositeType CompositeTypeField = null;
            if (IsParentStartElement(reader, false, true))
            {
                CompositeTypeField = new CompositeType();
                reader.Read();
                if (IsChildStartElement(reader, "BoolValue", false, false))
                {
                    reader.Read();
                    CompositeTypeField.BoolValue = XmlConvert.ToBoolean(reader.ReadString());
                    reader.ReadEndElement();
                }
                if (IsChildStartElement(reader, "StringValue", true, false))
                {
                    reader.Read();
                    CompositeTypeField.StringValue = reader.ReadString();
                    reader.ReadEndElement();
                }
                reader.ReadEndElement();
            }
            return CompositeTypeField;
        }
        
        public override void WriteObject(XmlWriter writer, object graph)
        {
            CompositeType CompositeTypeField = ((CompositeType)(graph));
            if (WriteParentElement(writer, true, true, graph))
            {
                if (WriteChildElement(writer, "BoolValue", false, false, CompositeTypeField.BoolValue))
                {
                    writer.WriteString(XmlConvert.ToString(CompositeTypeField.BoolValue));
                    writer.WriteEndElement();
                }
                if (WriteChildElement(writer, "StringValue", true, false, CompositeTypeField.StringValue))
                {
                    writer.WriteString(CompositeTypeField.StringValue);
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            return;
        }
    }
}
